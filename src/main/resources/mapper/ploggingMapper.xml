<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.floc.mapper.PloggingMapper">

    <sql id="search">
        <if test="search.type != null and !search.type.equals('')">
            <trim prefix="AND(" prefixOverrides="OR" suffix=")">
                <foreach item="type" collection="search.types">
                    <trim prefix="OR">
                        <choose>
                            <when test="type=='n'.toString()">
                                USER_NICKNAME LIKE '%'||#{search.keyword}||'%'
                            </when>
                            <when test="type=='l'.toString()">
                                PLOGGING_START_LOCATION LIKE '%'||#{search.keyword}||'%'
                            </when>
                            <when test="type=='s'.toString()">
                                PLOGGING_START_DATETIME LIKE '%'||#{search.keyword}||'%'
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </trim>
        </if>
    </sql>

    <insert id="insert">
        INSERT INTO TBL_PLOGGING(ID, LOCAL_CREATOR_ID, PLOGGING_TITLE, PLOGGING_CONTENT, PLOGGING_START_LOCATION, PLOGGING_END_LOCATION, PLOGGING_ESTIMATED_TIME, PLOGGING_MAXIMUM_PARTICIPANT, PLOGGING_START_DATETIME, PLOGGING_STATUS, PLOGGING_APPLY_DATE, PLOGGING_REJECTED_REASON, PLOGGING_REGISTER_DATE, PLOGGING_UPDATED_DATE, PLOGGING_VIEWED_COUNT, PLOGGING_IMAGE_NAME, PLOGGING_IMAGE_UUID, PLOGGING_IMAGE_SIZE)
        VALUES(SEQ_PLOGGING.NEXTVAL, #{localCreatorId}, #{ploggingTitle}, #{ploggingContent}, #{ploggingStartLocation}, #{ploggingEndLocation}, #{ploggingEstimatedTime}, #{ploggingMaximumParticipant}, #{ploggingStartDateTime}, #{ploggingStatus} , SYSDATE, #{ploggingRejectedReason}, SYSDATE, SYSDATE, (0) , #{ploggingImageName}, #{ploggingImageUuid}, #{ploggingImageSize})
    </insert>

    <select id="getTotal" resultType="int">
        SELECT count(*)
        FROM TBL_PLOGGING
        <if test="location != null">
            WHERE PLOGGING_START_LOCATION LIKE '%'||#{location}||'%'
        </if>
    </select>

    <select id="selectAll" resultType="ploggingDTO">
        SELECT p.ID, LOCAL_CREATOR_ID,USER_NICKNAME , PLOGGING_TITLE, PLOGGING_CONTENT, PLOGGING_START_LOCATION, PLOGGING_END_LOCATION, PLOGGING_ESTIMATED_TIME, PLOGGING_MAXIMUM_PARTICIPANT, PLOGGING_START_DATETIME, PLOGGING_STATUS, PLOGGING_APPLY_DATE, PLOGGING_REJECTED_REASON, PLOGGING_REGISTER_DATE, PLOGGING_UPDATED_DATE, PLOGGING_VIEWED_COUNT, PLOGGING_IMAGE_NAME, PLOGGING_IMAGE_UUID, PLOGGING_IMAGE_SIZE
        FROM TBL_USER u JOIN TBL_PLOGGING p
        ON u.ID = p.LOCAL_CREATOR_ID
        <if test="location != null">
            WHERE PLOGGING_START_LOCATION LIKE '%'||#{location}||'%'
        </if>
        ORDER BY p.ID desc
    </select>

    <select id="selectOne" resultType="ploggingDTO">
        SELECT p.ID, LOCAL_CREATOR_ID,USER_NICKNAME , PLOGGING_TITLE, PLOGGING_CONTENT, PLOGGING_START_LOCATION, PLOGGING_END_LOCATION, PLOGGING_ESTIMATED_TIME, PLOGGING_MAXIMUM_PARTICIPANT, PLOGGING_START_DATETIME, PLOGGING_STATUS, PLOGGING_APPLY_DATE, PLOGGING_REJECTED_REASON, PLOGGING_REGISTER_DATE, PLOGGING_UPDATED_DATE, PLOGGING_VIEWED_COUNT, PLOGGING_IMAGE_NAME, PLOGGING_IMAGE_UUID, PLOGGING_IMAGE_SIZE
        FROM TBL_USER u JOIN TBL_PLOGGING p
        ON u.ID = p.LOCAL_CREATOR_ID AND p.ID = #{id}
    </select>

    <update id="update">
        UPDATE TBL_PLOGGING
        SET PLOGGING_TITLE = #{ploggingTitle}, PLOGGING_CONTENT = #{ploggingContent}, PLOGGING_UPDATED_DATE = SYSDATE
        WHERE ID = #{id}
    </update>

    <delete id="delete">
        DELETE FROM TBL_PLOGGING WHERE ID = #{id}
    </delete>

    <select id="selectCountOfPlogging" resultType="_int">
        SELECT COUNT(P.ID)
        FROM TBL_USER U JOIN TBL_PLOGGING P
        ON U.ID = P.LOCAL_CREATOR_ID
        <include refid="search"/>
    </select>

    <select id="selectFiles" resultType="ploggingDTO">
        SELECT p.ID, PLOGGING_IMAGE_NAME, PLOGGING_IMAGE_UUID, PLOGGING_IMAGE_SIZE
        FROM TBL_USER u JOIN TBL_PLOGGING p
        ON u.ID = p.ID
    </select>

    <select id="selectByRecent" resultType="ploggingVO">
    SELECT PLOGGING_TITLE,PLOGGING_TITLE, LOCAL_CREATOR_ID, PLOGGING_MAXIMUM_PARTICIPANT,PLOGGING_START_LOCATION,PLOGGING_START_DATETIME,PLOGGING_STATUS
    FROM (
    SELECT PLOGGING_TITLE,PLOGGING_TITLE, LOCAL_CREATOR_ID, PLOGGING_MAXIMUM_PARTICIPANT,PLOGGING_START_LOCATION,PLOGGING_START_DATETIME,PLOGGING_STATUS
    FROM TBL_PLOGGING ORDER BY ID DESC
    )
    <![CDATA[
        WHERE ROWNUM <=5
        ]]>
    </select>

    <select id="selectAllByAdmin" resultType="ploggingDTO">
        SELECT P.ID, LOCAL_CREATOR_ID,USER_NICKNAME , PLOGGING_TITLE, PLOGGING_CONTENT, PLOGGING_START_LOCATION, PLOGGING_END_LOCATION, PLOGGING_ESTIMATED_TIME, PLOGGING_MAXIMUM_PARTICIPANT, PLOGGING_START_DATETIME, PLOGGING_STATUS, PLOGGING_APPLY_DATE, PLOGGING_REJECTED_REASON, PLOGGING_REGISTER_DATE, PLOGGING_UPDATED_DATE, PLOGGING_VIEWED_COUNT, PLOGGING_IMAGE_NAME, PLOGGING_IMAGE_UUID, PLOGGING_IMAGE_SIZE
        FROM
            (
                SELECT ROWNUM R, ID, LOCAL_CREATOR_ID,USER_NICKNAME , PLOGGING_TITLE, PLOGGING_CONTENT, PLOGGING_START_LOCATION, PLOGGING_END_LOCATION, PLOGGING_ESTIMATED_TIME, PLOGGING_MAXIMUM_PARTICIPANT, PLOGGING_START_DATETIME, PLOGGING_STATUS, PLOGGING_APPLY_DATE, PLOGGING_REJECTED_REASON, PLOGGING_REGISTER_DATE, PLOGGING_UPDATED_DATE, PLOGGING_VIEWED_COUNT, PLOGGING_IMAGE_NAME, PLOGGING_IMAGE_UUID, PLOGGING_IMAGE_SIZE
                FROM
                (
                    SELECT  P.ID, LOCAL_CREATOR_ID,USER_NICKNAME , PLOGGING_TITLE, PLOGGING_CONTENT, PLOGGING_START_LOCATION, PLOGGING_END_LOCATION, PLOGGING_ESTIMATED_TIME, PLOGGING_MAXIMUM_PARTICIPANT, PLOGGING_START_DATETIME, PLOGGING_STATUS, PLOGGING_APPLY_DATE, PLOGGING_REJECTED_REASON, PLOGGING_REGISTER_DATE, PLOGGING_UPDATED_DATE, PLOGGING_VIEWED_COUNT, PLOGGING_IMAGE_NAME, PLOGGING_IMAGE_UUID, PLOGGING_IMAGE_SIZE
                    FROM TBL_USER U JOIN TBL_PLOGGING P
                    ON U.ID = P.LOCAL_CREATOR_ID
                    ORDER BY P.ID DESC
                ) P
            <![CDATA[
          WHERE ROWNUM <= #{adminPagination.page} * #{adminPagination.rowCount}
            ]]>
            <include refid="search"/>
            <![CDATA[
            ) P WHERE R > (#{adminPagination.page} - 1) * #{adminPagination.rowCount}
            ]]>
    </select>


    <delete id="deletePloggingByIds" parameterType="java.util.List">
        DELETE FROM TBL_PLOGGING
        WHERE ID IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>